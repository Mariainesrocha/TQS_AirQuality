// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class SeleniumIDEtestTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void seleniumIDEtest() {
    driver.get("http://localhost:8080/random");
    driver.manage().window().setSize(new Dimension(1848, 1053));
    driver.findElement(By.cssSelector("h2")).click();
    driver.findElement(By.cssSelector("h2")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("h2"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector("h2")).click();
    assertThat(driver.findElement(By.cssSelector("h2")).getText(), is("404 - PAGE NOT FOUND"));
    driver.findElement(By.cssSelector("a")).click();
    driver.findElement(By.cssSelector(".text")).click();
    driver.findElement(By.cssSelector(".text")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".text"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".text")).click();
    driver.findElement(By.cssSelector(".text")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".text"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".text")).click();
    driver.findElement(By.cssSelector(".text")).click();
    driver.findElement(By.cssSelector(".text")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".text"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".text")).click();
    driver.findElement(By.cssSelector(".img-circle-div:nth-child(1) > h3")).click();
    driver.findElement(By.cssSelector("h2:nth-child(1)")).click();
    driver.findElement(By.id("searchInput")).click();
    driver.findElement(By.id("searchInput")).sendKeys("Lisboa");
    driver.findElement(By.cssSelector("#searchButton > .text-primary:nth-child(1)")).click();
    driver.findElement(By.cssSelector("td:nth-child(1)")).click();
    driver.findElement(By.cssSelector("td:nth-child(1)")).click();
    {
      WebElement element = driver.findElement(By.cssSelector("td:nth-child(1)"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".parallax:nth-child(5) > .container")).click();
    driver.findElement(By.cssSelector("td:nth-child(2) > div:nth-child(2)")).click();
    driver.findElement(By.cssSelector(".p-1:nth-child(2)")).click();
    driver.findElement(By.id("lat")).click();
    driver.findElement(By.cssSelector(".fa-times-circle")).click();
    driver.findElement(By.id("lat")).click();
    driver.findElement(By.id("lat")).sendKeys("12.1");
    driver.findElement(By.id("lng")).click();
    driver.findElement(By.id("lng")).sendKeys("5.1");
    driver.findElement(By.id("searchButton2")).click();
    driver.findElement(By.id("searchInput")).click();
    driver.findElement(By.id("searchInput")).click();
    driver.findElement(By.id("searchInput")).sendKeys("Lis2oa");
    driver.findElement(By.cssSelector("#searchButton > .text-primary:nth-child(1)")).click();
    driver.findElement(By.cssSelector(".modal-body")).click();
    driver.findElement(By.cssSelector(".modal-body")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".modal-body"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".modal-body")).click();
    assertThat(driver.findElement(By.cssSelector(".modal-body")).getText(), is("Failed to search, try again later! If the error persists maybe we don\\\'t have information about the chosen city."));
    driver.findElement(By.cssSelector(".close")).click();
    driver.findElement(By.id("lat")).click();
    driver.findElement(By.id("lat")).click();
    {
      WebElement element = driver.findElement(By.id("lat"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.id("lat")).click();
    driver.findElement(By.id("lat")).sendKeys("12.a1");
    driver.findElement(By.cssSelector("#searchButton2 > span")).click();
    driver.findElement(By.cssSelector(".modal-body")).click();
    driver.findElement(By.cssSelector(".modal-body")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".modal-body"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".modal-body")).click();
    driver.findElement(By.cssSelector(".modal-body")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".modal-body"));
      Actions builder = new Actions(driver);
      builder.doubleClick(element).perform();
    }
    driver.findElement(By.cssSelector(".modal-body")).click();
    assertThat(driver.findElement(By.cssSelector(".modal-body")).getText(), is("Error with latitude and longitude values"));
    driver.findElement(By.cssSelector(".close")).click();
    driver.close();
  }
}
